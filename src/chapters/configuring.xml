<?xml version="1.0" encoding="UTF-8"?>

<chapter xml:id="configuring-guacamole" 
    xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="en"
    xmlns:xi="http://www.w3.org/2001/XInclude">

    <title>Configuring Guacamole</title>
    <para>After installing Guacamole, it will be minimally configured to use the
        default authentication. You can modify this configuration if you need to
        use a different authentication module (such as the MySQL authentication,
        which is discussed in a separate chapter) or if you need to veer from
        the defaults.</para>
    <para>Guacamole's configuration consists of two main pieces: a directory
        referred to as <varname>GUACAMOLE_HOME</varname>, which is the primary
        search location for configuration files, and
            <filename>guacamole.properties</filename>, the main configuration
        file used by Guacamole and its extensions.</para>
    <section xml:id="guacamole-home">
        <title><varname>GUACAMOLE_HOME</varname></title>
        <para>As of release 0.8.0, Guacamole now reads files from its own
            configuration directory by default, resorting to the classpath only
            when this directory cannot be found. When locating this directory,
            Guacamole will try, in order:</para>
        <orderedlist>
            <listitem>
                <para>The directory specified within the system property
                        <property>guacamole.home</property>.</para>
            </listitem>
            <listitem>
                <para>The directory specified within the environment variable
                        <varname>GUACAMOLE_HOME</varname>.</para>
            </listitem>
            <listitem>
                <para>The directory <filename>.guacamole</filename>, located
                    within the home directory of the user running the servlet
                    container.</para>
            </listitem>
        </orderedlist>
        <para>This directory will be referred to as
                <varname>GUACAMOLE_HOME</varname> elsewhere in the
            documentation.</para>
        <para>Guacamole uses <varname>GUACAMOLE_HOME</varname> as the primary
            search location for configuration file like
                <filename>guacamole.properties</filename>.</para>
    </section>

    <section xml:id="initial-setup">
        <title><filename>guacamole.properties</filename></title>
        <indexterm xmlns:xl="http://www.w3.org/1999/xlink">
            <primary><filename>guacamole.properties</filename></primary>
        </indexterm>
        <indexterm xmlns:xl="http://www.w3.org/1999/xlink">
            <primary>configuration</primary>
            <secondary>Guacamole</secondary>
        </indexterm>
        <indexterm xmlns:xl="http://www.w3.org/1999/xlink">
            <primary>Guacamole</primary>
            <secondary>configuring</secondary>
        </indexterm>
        <para>The Guacamole web application uses one main configuration file
            called <filename>guacamole.properties</filename>. This file is the
            common location for all configuration properties read by Guacamole
            or any extension of Guacamole, including authentication
            providers.</para>
        <para>In previous releases, this file had to be in the classpath of your
            servlet container. Now, the location of
                <filename>guacamole.properties</filename> can be explicitly
            defined with environment variables or system properties, and the
            classpath is only used as a last resort. When searching for
                <filename>guacamole.properties</filename>, Guacamole will check,
            in order:</para>
        <orderedlist>
            <listitem>
                <para>Within <varname>GUACAMOLE_HOME</varname>, as defined
                    above.</para>
            </listitem>
            <listitem>
                <para>The classpath of the servlet container.</para>
            </listitem>
        </orderedlist>
        <para>At the bare minimum, the <filename>guacamole.properties</filename>
            file provides five basic properties: </para>
        <variablelist>
            <varlistentry>
                <term><indexterm xmlns:xl="http://www.w3.org/1999/xlink">
                        <primary>guacd-host</primary>
                    </indexterm><parameter>guacd-host</parameter></term>
                <listitem>
                    <para>The host the Guacamole proxy daemon
                            (<package>guacd</package>) is listening on. This is
                        most likely localhost. </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><indexterm xmlns:xl="http://www.w3.org/1999/xlink">
                        <primary>guacd-port</primary>
                    </indexterm><parameter>guacd-port</parameter></term>
                <listitem>
                    <para>The port the Guacamole proxy daemon
                            (<package>guacd</package>) is listening on. This is
                        port 4822 by default. </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><indexterm xmlns:xl="http://www.w3.org/1999/xlink">
                        <primary>auth-provider</primary>
                    </indexterm><parameter>auth-provider</parameter></term>
                <listitem>
                    <para>The authentication provider to use when
                        authenticating. Normally, this will be set to
                            <classname>BasicFileAuthenticationProvider</classname>
                        which is the default authentication provider provided
                        with Guacamole. </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><indexterm xmlns:xl="http://www.w3.org/1999/xlink">
                        <primary>lib-directory</primary>
                    </indexterm><parameter>lib-directory</parameter></term>
                <listitem>
                    <para>The directory to load extensions to Guacamole from. If
                        you wish to use a custom authentication provider or
                        custom hooks, the <filename>.jar</filename> file and all
                        dependencies must be placed in the directory specified
                        here. </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><indexterm xmlns:xl="http://www.w3.org/1999/xlink">
                        <primary>event-listeners</primary>
                    </indexterm><parameter>event-listeners</parameter></term>
                <listitem>
                    <para>A comma-delimited list of event listeners which should
                        be loaded and installed such that they are informed of
                        Guacamole-related events. These classes must be in the
                        classpath, preferably by having their corresponding
                            <filename>.jar</filename> files placed within the
                        directory specified by the
                            <property>lib-directory</property> property.</para>
                </listitem>
            </varlistentry>
        </variablelist>
        <example>
            <title>Minimal <filename>guacamole.properties</filename></title>
            <xi:include href="conf/guacamole.properties.xml"/>
        </example>
    </section>
    <section>
        <title>Using the default authentication</title>
        <indexterm xmlns:xl="http://www.w3.org/1999/xlink">
            <primary>user-mapping.xml</primary>
        </indexterm>
        <indexterm xmlns:xl="http://www.w3.org/1999/xlink">
            <primary>authentication</primary>
        </indexterm>
        <para>Guacamole's default authentication module is simple and consists
            of a mapping of usernames to configurations. This authentication
            module comes with Guacamole and simply reads usernames and passwords
            from an XML file. If you wish to use this authentication mechanism,
            you must ensure the <property>auth-provider</property> property is
            set to the fully-qualified name of
                <classname>BasicFileAuthenticationProvider</classname><footnote>
                <para><classname>net.sourceforge.guacamole.net.basic.BasicFileAuthenticationProvider</classname></para>
            </footnote>This is the case within the example
                <filename>guacamole.properties</filename> file shown above, and
            in the <filename>guacamole.properties</filename> file included with
            Guacamole. Unless you have already tried another authentication
            module, you will not need to edit this value yourself if you are
            using the configuration files that come with Guacamole.</para>
        <para>There are other authentication modules available. The Guacamole
            project now provides a MySQL-backed authentication module with extra
            features (like the ability to manage connections and users from the
            web interface), and other authentication modules can be created
            using the extension API provided along with the Guacamole web
            application, <package>guacamole-ext</package>.</para>
        <section>
            <title><filename>user-mapping.xml</filename></title>
            <para>The default authentication provider used by Guacamole reads
                all username, password, and configuration information from a
                file called the "user mapping" (typically named
                    <filename>user-mapping.xml</filename>). Other authentication
                providers can be written which read authentication information
                from other sources, but those are not documented here. To learn
                how to configure an authentication provider not included in the
                main Guacamole bundle, consult the documentation provided with
                that authentication provider.</para>
            <para>When using
                    <classname>BasicFileAuthenticationProvider</classname>,
                username/password pairs are specified with
                    <code>&lt;authorize></code> tags, which each have a
                    <code>username</code> and <code>password</code> attribute.
                Each <code>&lt;authorize></code> tag authorizes a specific
                username/password pair to access all connections within the
                tag.</para>
            <para>To specify a connection within an <code>&lt;authorize></code>
                tag, you can either list a single protocol and set of parameters
                (specified with a <code>&lt;protocol></code> tag and any number
                of <code>&lt;param></code> tags), in which case that user will
                have access to only one connection named "DEFAULT", or you can
                specify one or more connections with one or more
                    <code>&lt;connection></code> tags, each of which can be
                named and contains a <code>&lt;protocol></code> tag and any
                number of <code>&lt;param></code> tags.</para>
            <para>Both of these possibilities are shown in the example
                    <code>user-mapping.xml</code> below. A similar example is
                included with Guacamole.</para>
            <example>
                <title>A simple <filename>user-mapping.xml</filename></title>
                <xi:include href="conf/user-mapping.xml.xml"/>
            </example>
            <section xml:id="connection-setup">
                <title>Adding users</title>
                <indexterm xmlns:xl="http://www.w3.org/1999/xlink">
                    <primary>users</primary>
                    <secondary>adding</secondary>
                </indexterm>
                <para/>
            </section>
            <section>
                <title>Adding connections to a user</title>
                <indexterm xmlns:xl="http://www.w3.org/1999/xlink">
                    <primary>connections</primary>
                    <secondary>adding</secondary>
                </indexterm>
                <para/>
            </section>
        </section>
    </section>

</chapter>
