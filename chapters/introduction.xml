<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook V5.0//EN"
    "http://docbook.org/xml/5.0/dtd/docbook.dtd">

<chapter id="introduction" 
    xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="en"
    xmlns:xl="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude">

    <title>Introduction</title>

    <!--
    - Guacamole History
    -->

    <section id="history">

        <title>History</title>

        <para>
            Guacamole began as a purely text-based Telnet client written in
            JavaScript called <application
                xl:href="http://sourceforge.net/projects/realmint">RealMint</application>
            ("RealMint" is an anagram for "terminal"). When several other
            identical JavaScript terminal emulators were found, most of which
            well-established and stable, the project was dropped, and work
            started instead on a proof-of-concept JavaScript VNC client.
        </para>

        <para>
            This client was purely JavaScript with a Java server component,
            and worked by translating VNC into an XML-based version of the
            same. Although relatively slow, the proof-of-concept worked well
            enough that the project needed an online place to live, and was
            registered with SourceForge as "Guacamole" - an HTML5 VNC client.
        </para>

        <para>
            As Guacamole grew and became more than a proof-of-concept, the
            need for speed increased, and the old RealMint-style long polling
            was dropped, as was the use of XML. A faster text-based protocol
            was developed which could present the features of multiple remote
            desktop protocols, not just VNC. The entire system was
            rearchitected into a standard daemon, guacd, and a common library,
            libguac, which drove both the daemon and protocol support, which
            became extendable.
        </para>

        <para>
            The scope of the project expanded from an adequate VNC client to a
            performant HTML5 remote desktop gateway and general API. In its
            current state, Guacamole can be used as a central gateway to access
            any number of machines running different remote desktop servers. It
            provides extendable authentication, and in the case you need
            something more specialized, a general API for HTML5-based remote
            access.
        </para>

    </section>

    <!--
    - What is Guacamole?
    -->

    <section id="whatguac">

        <title>What is Guacamole?</title>

        <para>
            Guacamole is a project that provides an HTML5 web application of
            the same name that provides access to desktop environments using
            remote desktop protocols (such as VNC or RDP). The project also
            provides an API that drives the flagship application, and can be
            used to power other similar applications or services.
        </para>

        <para>
            As a web application, Guacamole provides a centralized server which
            acts as a tunnel and proxy. Being written in JavaScript and using
            only HTML5 and other standards, Guacamole requires nothing more
            than a modern web browser or web-enabled device when accessing any
            of the desktops served.
        </para>

        <para>
            As an API, Guacamole provides a common and efficient means of
            streaming text data over a JavaScript-based tunnel (which need not
            use WebSocket), and a client implementation which supports the
            Guacamole protocol and renders the remote display when combined
            with a Guacamole protocol stream from the tunnel.
        </para>

        <para>
            It provides cross-browser mouse and keyboard events, an XML-driven
            on-screen keyboard, and synchronized nestable layers with
            hardware-accelerated compositing.
        </para>

        <para>
            Projects that wish to provide remote desktop support over HTML5 can
            leverage the years of research and development that went into
            Guacamole by incorporating the API into their application or
            service.
        </para>

    </section>

    <!--
    - Why use Guacamole?
    -->

    <section id="whyguac">

        <title>Why should I (or anyone) use Guacamole?</title>

    </section>

</chapter>
