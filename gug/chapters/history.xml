<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook V5.0//EN"
    "http://docbook.org/xml/5.0/dtd/docbook.dtd">

<chapter id="history-of-guacamole"
    xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="en"
    xmlns:xl="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude">

    <title>History</title>
    <indexterm>
        <primary>Guacamole</primary>
        <secondary>history</secondary>
    </indexterm>

    <para>
        Guacamole began as a purely text-based Telnet client written in
        JavaScript called <application
            xl:href="http://sourceforge.net/projects/realmint">RealMint</application>
        ("RealMint" is an anagram for "terminal"). When several other
        identical JavaScript terminal emulators were found, most of which
        well-established and stable, the project was dropped, and work
        started instead on a proof-of-concept JavaScript VNC client.
    </para>

    <para>
        This client was purely JavaScript with a Java server component,
        and worked by translating VNC into an XML-based version of the
        same. Although relatively slow, the proof-of-concept worked well
        enough that the project needed an online place to live, and was
        registered with SourceForge as "Guacamole" - an HTML5 VNC client.
    </para>

    <para>
        As Guacamole grew and became more than a proof-of-concept, the
        need for speed increased, and the old RealMint-style long polling
        was dropped, as was the use of XML. A faster text-based protocol
        was developed which could present the features of multiple remote
        desktop protocols, not just VNC. The entire system was
        rearchitected into a standard daemon, guacd, and a common library,
        libguac, which drove both the daemon and protocol support, which
        became extendable.
    </para>

    <para>
        The scope of the project expanded from an adequate VNC client to a
        performant HTML5 remote desktop gateway and general API. In its
        current state, Guacamole can be used as a central gateway to access
        any number of machines running different remote desktop servers. It
        provides extendable authentication, and in the case you need
        something more specialized, a general API for HTML5-based remote
        access.
    </para>

</chapter>
